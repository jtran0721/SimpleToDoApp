AWSTemplateFormatVersion: 2010-09-09
Parameters:
  PrivateSub1:
    Type: String
    Default: subnet-0dcbe5dc23cad4fae
  PrivateSub2:
    Type: String
    Default: subnet-04dafc6015a245202
  VPCID:
    Type: String
    Default: vpc-0c6c0a488ab519e12
  DomainName:
    Type: String
    Default: solzarc.co
Resources:
  ACMCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Sub "api.${DomainName}"
      DomainValidationOptions:
        - DomainName: !Sub "api.${DomainName}"
          ValidationDomain: !Sub "api.${DomainName}"
      ValidationMethod: DNS
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      clusterArn: arn:aws:ecs:ap-southeast-2:585781887322:cluster/Jenkins-App-Deploy
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: todoapp-log-group
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: todoapp-iam-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      Policies:
        - PolicyDocument:
            Statement:
              Action:
                - ses:SendEmail
              Effect: Allow
              Resource: '*'
          PolicyName: send-mail
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ContainerSecurityGroup
      GroupDescription: Security group for container
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: todoapp-ecs-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: todoapp-container
          Image: 585781887322.dkr.ecr.ap-southeast-2.amazonaws.com/jenkins/todoapp:202111041714
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
      RequiresCompatibilities:
        - FARGATE
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: aws-ecs-typescript-svc
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PrivateSub1
            - !Ref PrivateSub2
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: LoadBalancerSecurityGroup
      GroupDescription: Security group for load balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: todoapp-alb
      Subnets:
        - !Ref PrivateSub1
        - !Ref PrivateSub2
      SecurityGroups:
        - !GetAtt LoadBalancerSecurityGroup.GroupId

# aws cloudformation create-stack --stack-name aws-ecs-typescript-api --template-body file://./ecs-1.yml --capabilities CAPABILITY_NAMED_IAM \
# --parameters ParameterKey=VPCID,ParameterValue=YOUR_VPC_ID \
# ParameterKey=Subnet1ID,ParameterValue=YOUR_SUBNET_1_ID \
# ParameterKey=Subnet2ID,ParameterValue=YOUR_SUBNET_2_ID \
# ParameterKey=DomainName,ParameterValue=YOUR_DOMAIN_NAME.com